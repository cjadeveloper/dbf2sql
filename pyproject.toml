[tool.poetry]
name = "dbf2sql"
version = "0.1.1-dev3"
description = "Convert DBF files to SQL tables"
authors = ["Cristian Javier Azulay <cjadeveloper@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/cjadeveloper/dbf2sql"
packages = [{include = "dbf2sql"}]

[tool.poetry.dependencies]
python = "^3.8"
pandas = "^1.1.2"
sqlalchemy = "^1.3.19"
ipython = { version = "^7.19.0", optional = true }
neovim = { version = "^0.3.1", optional = true }
pynvim = { version = "^0.4.2", optional = true }
dbfread = "^2.0.7"
dataset = "^1.4.1"
pyodbc = { version = "^4.0.30", optional = true}
pefile = "^2019.4.18"
click = "^7.1.2"

[tool.poetry.extras]
ipy = ["ipython"]
nvim = ["neovim", "pynvim"]
mssql = ["pyodbc"]

[tool.poetry.dev-dependencies]
pytest = "^5.2"
black = "^20.8b1"
isort = "^5.5.2"
pre-commit = "^2.7.1"
flakehell = "^0.6.1"
pylint = "^2.6.0"
flake8-builtins = "^1.5.2"
flake8-blind-except = "^0.1.1"
flake8-logging-format  = "^0.6.0"
pyinstaller = "^4.2"
pytest-picked = "^0.4.6"
pytest-sugar = "^0.9.4"
pytest-clarity = "^0.3.0-alpha.0"
pytest-cov = "^2.11.1"

[tool.poetry.scripts]
dbf2sql = 'dbf2sql:cli'

[tool.isort]
known_third_party = []
skip_gitignore = true
line_length = 99
src_paths = []
force_single_line = true
force_grid_wrap=0
atomic = true
include_trailing_comma = true
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
skip_glob = ["*/setup.py"]
filter_files = true


[tool.black]
line-length = 99
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.flakehell]
# make output nice
format = "grouped"
# show line of source code in output
show_source = true
per_file_ignores = ["__init__.py:F401"]

[tool.flakehell.plugins]
# include everything in pyflakes except E501
pyflakes = ["+*"]
flake8-blind-except = ["+*"]
flake8-builtins = ["+*"]
flake8-logging-format = ["+*"]
mccabe = ["+*"]
pycodestyle = ["+*", "-E501"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
